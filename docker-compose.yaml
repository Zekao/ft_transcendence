version: '3.7'

# ************************************************************
# *                  VOLUMES                                 *
# ************************************************************
volumes:
    database:

# ************************************************************
# *                  SERVICES                                *
# ************************************************************
services:
    # *******************API*******************
    api:
        container_name: backend
        image: backend:latest
        build:
            context: ./backend/api
        restart: always
        volumes:
          - ./backend/api/:/usr/src/app
          - /usr/src/app/node_modules
        ports:
            - ${SERVER_PORT_BACK}:${SERVER_PORT_BACK}
        command: npm run start:dev
        env_file:
          - .env
        depends_on:
            - database

    # *******************FRONTEND*******************

    client:
        image: node:16-alpine
        working_dir: /app
        entrypoint: |
          /bin/sh -c "
            yarn dev --dotenv ../.env
          "
        volumes:
          - ./client:/app
          - ./.env:/.env
        ports:
            - ${SERVER_PORT_FRONT}:${SERVER_PORT_FRONT}
        env_file:
          - .env
        restart: unless-stopped

    # *******************DATABASE*******************
    database:
        container_name: postgres
        image: postgres:latest
        command: postgres -c stats_temp_directory=/tmp
        restart: always
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_DB: ${DB_DATABASE_NAME}
        ports:
            - 5432:5432
        volumes:
            - database:/var/lib/postgresql/data

    # *******************ADMINER*******************
    adminer:
        container_name: adminer
        image: adminer
        restart: always
        ports:
            - ${ADMINER_PORT}:8080
        depends_on:
            - database
